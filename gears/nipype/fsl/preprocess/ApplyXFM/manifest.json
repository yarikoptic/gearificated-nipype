{
  "name": "nipype-interfaces-fsl-preprocess-applyxfm", 
  "description": "Currently just a light wrapper around FLIRT,", 
  "author": "Yaroslav O. Halchenko", 
  "maintainer": "Yaroslav O. Halchenko <debian@onerussian.com>", 
  "license": "Other", 
  "version": "0.0.2.nipype.1.0.2.1", 
  "config": {
    "angle_rep": {
      "type": "string", 
      "description": "representation of rotation angles [default=quaternion]", 
      "default": "quaternion", 
      "enum": [
        "quaternion", 
        "euler"
      ]
    }, 
    "apply_isoxfm": {
      "type": "number", 
      "description": "as applyxfm but forces isotropic resampling", 
      "optional": true
    }, 
    "apply_xfm": {
      "type": "boolean", 
      "description": "apply transformation supplied by in_matrix_file or uses_qform to use the affine matrix stored in the reference header [default=True]", 
      "default": true
    }, 
    "args": {
      "type": "string", 
      "description": "Additional parameters to the command", 
      "optional": true
    }, 
    "bbrslope": {
      "type": "number", 
      "description": "value of bbr slope", 
      "optional": true
    }, 
    "bbrtype": {
      "type": "string", 
      "description": "type of bbr cost function: signed [default], global_abs, local_abs [default=signed]", 
      "default": "signed", 
      "enum": [
        "signed", 
        "global_abs", 
        "local_abs"
      ]
    }, 
    "bgvalue": {
      "type": "number", 
      "description": "use specified background value for points outside FOV", 
      "optional": true
    }, 
    "bins": {
      "type": "integer", 
      "description": "number of histogram bins", 
      "optional": true
    }, 
    "coarse_search": {
      "type": "integer", 
      "description": "coarse search delta angle", 
      "optional": true
    }, 
    "cost": {
      "type": "string", 
      "description": "cost function [default=mutualinfo]", 
      "default": "mutualinfo", 
      "enum": [
        "mutualinfo", 
        "corratio", 
        "normcorr", 
        "normmi", 
        "leastsq", 
        "labeldiff", 
        "bbr"
      ]
    }, 
    "cost_func": {
      "type": "string", 
      "description": "cost function [default=mutualinfo]", 
      "default": "mutualinfo", 
      "enum": [
        "mutualinfo", 
        "corratio", 
        "normcorr", 
        "normmi", 
        "leastsq", 
        "labeldiff", 
        "bbr"
      ]
    }, 
    "datatype": {
      "type": "string", 
      "description": "force output data type [default=char]", 
      "default": "char", 
      "enum": [
        "char", 
        "short", 
        "int", 
        "float", 
        "double"
      ]
    }, 
    "display_init": {
      "type": "boolean", 
      "description": "display initial matrix", 
      "optional": true
    }, 
    "dof": {
      "type": "integer", 
      "description": "number of transform degrees of freedom", 
      "optional": true
    }, 
    "echospacing": {
      "type": "number", 
      "description": "value of EPI echo spacing - units of seconds", 
      "optional": true
    }, 
    "fine_search": {
      "type": "integer", 
      "description": "fine search delta angle", 
      "optional": true
    }, 
    "force_scaling": {
      "type": "boolean", 
      "description": "force rescaling even for low-res images", 
      "optional": true
    }, 
    "interp": {
      "type": "string", 
      "description": "final interpolation method used in reslicing [default=trilinear]", 
      "default": "trilinear", 
      "enum": [
        "trilinear", 
        "nearestneighbour", 
        "sinc", 
        "spline"
      ]
    }, 
    "min_sampling": {
      "type": "number", 
      "description": "set minimum voxel dimension for sampling", 
      "optional": true
    }, 
    "no_clamp": {
      "type": "boolean", 
      "description": "do not use intensity clamping", 
      "optional": true
    }, 
    "no_resample": {
      "type": "boolean", 
      "description": "do not change input sampling", 
      "optional": true
    }, 
    "no_resample_blur": {
      "type": "boolean", 
      "description": "do not use blurring on downsampling", 
      "optional": true
    }, 
    "no_search": {
      "type": "boolean", 
      "description": "set all angular searches to ranges 0 to 0", 
      "optional": true
    }, 
    "output_type": {
      "type": "string", 
      "description": "FSL output type [default=NIFTI_GZ]", 
      "default": "NIFTI_GZ", 
      "enum": [
        "NIFTI_PAIR", 
        "NIFTI_PAIR_GZ", 
        "NIFTI_GZ", 
        "NIFTI"
      ]
    }, 
    "padding_size": {
      "type": "integer", 
      "description": "for applyxfm: interpolates outside image by size", 
      "optional": true
    }, 
    "pedir": {
      "type": "integer", 
      "description": "phase encode direction of EPI - 1/2/3=x/y/z & -1/-2/-3=-x/-y/-z", 
      "optional": true
    }, 
    "rigid2D": {
      "type": "boolean", 
      "description": "use 2D rigid body mode - ignores dof", 
      "optional": true
    }, 
    "save_log": {
      "type": "boolean", 
      "description": "save to log file", 
      "optional": true
    }, 
    "searchr_x": {
      "type": "array", 
      "description": "search angles along x-axis, in degrees", 
      "optional": true, 
      "items": {
        "type": "integer"
      }
    }, 
    "searchr_y": {
      "type": "array", 
      "description": "search angles along y-axis, in degrees", 
      "optional": true, 
      "items": {
        "type": "integer"
      }
    }, 
    "searchr_z": {
      "type": "array", 
      "description": "search angles along z-axis, in degrees", 
      "optional": true, 
      "items": {
        "type": "integer"
      }
    }, 
    "sinc_width": {
      "type": "integer", 
      "description": "full-width in voxels", 
      "optional": true
    }, 
    "sinc_window": {
      "type": "string", 
      "description": "sinc window [default=rectangular]", 
      "default": "rectangular", 
      "enum": [
        "rectangular", 
        "hanning", 
        "blackman"
      ]
    }, 
    "uses_qform": {
      "type": "boolean", 
      "description": "initialize using sform or qform", 
      "optional": true
    }, 
    "verbose": {
      "type": "integer", 
      "description": "verbose mode, 0 is least", 
      "optional": true
    }
  }, 
  "inputs": {
    "fieldmap": {
      "description": "fieldmap image in rads/s - must be already registered to the reference image", 
      "optional": true, 
      "base": "file"
    }, 
    "fieldmapmask": {
      "description": "mask for fieldmap image", 
      "optional": true, 
      "base": "file"
    }, 
    "in_file": {
      "description": "input file", 
      "base": "file"
    }, 
    "in_matrix_file": {
      "description": "input 4x4 affine matrix", 
      "optional": true, 
      "base": "file"
    }, 
    "in_weight": {
      "description": "File for input weighting volume", 
      "optional": true, 
      "base": "file"
    }, 
    "out_file": {
      "description": "registered output file", 
      "optional": true, 
      "base": "file"
    }, 
    "out_log": {
      "description": "output log", 
      "optional": true, 
      "base": "file"
    }, 
    "out_matrix_file": {
      "description": "output affine matrix in 4x4 asciii format", 
      "optional": true, 
      "base": "file"
    }, 
    "ref_weight": {
      "description": "File for reference weighting volume", 
      "optional": true, 
      "base": "file"
    }, 
    "reference": {
      "description": "reference file", 
      "base": "file"
    }, 
    "schedule": {
      "description": "replaces default schedule", 
      "optional": true, 
      "base": "file"
    }, 
    "wm_seg": {
      "description": "white matter segmentation volume needed by BBR cost function", 
      "optional": true, 
      "base": "file"
    }, 
    "wmcoords": {
      "description": "white matter boundary coordinates for BBR cost function", 
      "optional": true, 
      "base": "file"
    }, 
    "wmnorms": {
      "description": "white matter boundary normals for BBR cost function", 
      "optional": true, 
      "base": "file"
    }
  }, 
  "url": "http://nipype.readthedocs.io/en/1.0.2/interfaces/generated/interfaces.ants/registration.html", 
  "source": "https://github.com/yarikoptic/gearificator", 
  "custom": {
    "gearificator": {
      "interface": "nipype.interfaces.fsl.preprocess:ApplyXFM", 
      "outputs": {
        "out_file": {
          "description": "path/name of registered file (if generated)"
        }, 
        "out_log": {
          "description": "path/name of output log (if generated)"
        }, 
        "out_matrix_file": {
          "description": "path/name of calculated affine transform (if generated)"
        }
      }, 
      "category": "analysis"
    }, 
    "gear-builder": {
      "image": "nipype-interfaces-fsl-preprocess-applyxfm:0.0.2.nipype.1.0.2.1"
    }, 
    "docker-image": "nipype-interfaces-fsl-preprocess-applyxfm:0.0.2.nipype.1.0.2.1"
  }, 
  "label": "ApplyXFM"
}